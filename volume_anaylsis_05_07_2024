{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyM/OCATiocLM/4nnXp2hdXH"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":2,"metadata":{"id":"ueRr1Zb40xez","executionInfo":{"status":"ok","timestamp":1720205837024,"user_tz":-300,"elapsed":463,"user":{"displayName":"Ghaffar Elahi","userId":"03211535299359125772"}}},"outputs":[],"source":["\n","import requests\n","import json\n","import math\n","import pandas_datareader as web\n","import numpy as np\n","\n","import pandas as pd\n","import time\n","import datetime\n","import matplotlib.pyplot as plt\n","\n"]},{"cell_type":"code","source":["class MarketData:\n","\n","\n","    @staticmethod\n","    def get_binance_data(symbol, interval , barsback=10):\n","        url = f\"https://api.binance.us/api/v3/klines\"\n","        params = {\n","            'symbol': symbol.upper(),\n","            'interval': interval.lower(),\n","            'limit': barsback\n","        }\n","        print(params)\n","        response = requests.get(url, params=params)\n","        if response.status_code == 200:\n","            data = response.json()\n","\n","            return MarketData.data_to_dataframe_binance(data)\n","        else:\n","\n","            print(f\"Failed to fetch data. Status code: {response.json()}\")\n","            return None\n","\n","    def data_to_dataframe_binance(data):\n","      # Define the column names based on Binance API response\n","      columns = [\n","          \"timestamp\", \"open\", \"high\", \"low\", \"close\", \"volume\",\n","          \"Close Time\", \"Quote Asset Volume\", \"Number of Trades\",\n","          \"Taker Buy Base Asset Volume\", \"Taker Buy Quote Asset Volume\", \"Ignore\"\n","      ]\n","      # Convert the data to a pandas DataFrame\n","      df = pd.DataFrame(data, columns=columns)\n","      # Convert timestamp columns to datetime\n","      df[\"timestamp\"] = pd.to_datetime(df['timestamp'])\n","      df[\"Close Time\"] = pd.to_datetime(df[\"Close Time\"], unit='ms')\n","      # Convert numeric columns to float\n","      numeric_columns = [\"open\", \"high\", \"low\", \"close\", \"volume\", \"Quote Asset Volume\",\n","                        \"Taker Buy Base Asset Volume\", \"Taker Buy Quote Asset Volume\"]\n","      df[numeric_columns] = df[numeric_columns].astype(float)\n","      return df\n","\n","# ////////////////////////////////\n","    exchange = None\n","\n","    @staticmethod\n","    def initialize_exchange():\n","        if MarketData.exchange is None:\n","            MarketData.exchange = ccxt.okx({\n","                'rateLimit': 1000,\n","                'enableRateLimit': True,\n","            })\n","            try:\n","                MarketData.exchange.load_markets()\n","                print(\"Successfully connected to OKX\")\n","            except Exception as e:\n","                print(f\"Error connecting to OKX: {e}\")\n","                raise\n","\n","    @staticmethod\n","    def fetch_bybit(symbol, timeframe = \"1h\" , limit=100):\n","        BASE_URL = \"https://api.bybit.com\"\n","        endpoint = \"/v2/public/kline/list\"\n","        params = {\n","            \"symbol\": symbol,\n","            \"interval\":  timeframe,\n","            \"limit\": limit\n","        }\n","\n","        try:\n","            response = requests.get(BASE_URL + endpoint, params=params)\n","            response.raise_for_status()  # Raise an exception for HTTP errors\n","            candles_data = response.json()\n","            return candles_data\n","        except requests.exceptions.RequestException as e:\n","            print(f\"Error fetching 1-hour candles data: {e}\")\n","            return None"],"metadata":{"id":"_0B9LWXi1E4M","executionInfo":{"status":"ok","timestamp":1720205998504,"user_tz":-300,"elapsed":445,"user":{"displayName":"Ghaffar Elahi","userId":"03211535299359125772"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["MarketData.fetch_bybit(\"BTCUSDT\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ojqjCQovOyFY","executionInfo":{"status":"ok","timestamp":1720206002685,"user_tz":-300,"elapsed":475,"user":{"displayName":"Ghaffar Elahi","userId":"03211535299359125772"}},"outputId":"17f73d4b-2f7c-4cd7-f92d-1c8e5303f43d"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["Error fetching 1-hour candles data: 403 Client Error: Forbidden for url: https://api.bybit.com/v2/public/kline/list?symbol=BTCUSDT&interval=1h&limit=100\n"]}]}]}